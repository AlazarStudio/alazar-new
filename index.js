import { readFileSync } from 'fs';
import { createServer } from 'https';
import express, { json } from 'express';
import { join, dirname } from 'path';
import { fileURLToPath } from 'url';
import developersRouter from './routes/developers';
import categoriesRouter from './routes/categories';
import casesRouter from './routes/cases';
import cors from 'cors';

// üîπ –≠–º—É–ª—è—Ü–∏—è __dirname –≤ ESM
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const app = express();
app.use(cors());

// –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–∏ –ø—É—Ç–∏
const sslOptions = {
  key: readFileSync('/etc/letsencrypt/live/backend.alazarstudio.ru/privkey.pem'),
  cert: readFileSync('/etc/letsencrypt/live/backend.alazarstudio.ru/fullchain.pem')
};

// –ó–∞–≥—Ä—É–∂–∞–µ–º middleware –∏ –º–∞—Ä—à—Ä—É—Ç—ã
app.use(json());
app.use('/uploads', express.static(join(__dirname, 'uploads')));
app.use('/api/developers', developersRouter);
app.use('/api/categories', categoriesRouter);
app.use('/api/cases', casesRouter);

// –ó–∞–ø—É—Å–∫ HTTPS-—Å–µ—Ä–≤–µ—Ä–∞
createServer(sslOptions, app).listen(443, () => {
  console.log('‚úÖ HTTPS-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: https://backend.alazarstudio.ru');
});
